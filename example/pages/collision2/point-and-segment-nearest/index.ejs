---
title: 点と線分の最近傍点
---
<div id="graph1"></div>

<p>
  <span class="yellow">★</span>は点と線分が最も近い場所<br>
  <span class="green">●</span>はドラッグして動かせる。
</p>

<p>
  点と線分の最近傍点の求め方は「点と直線」や「点と半直線」に少し手順が増えるだけになりますので、この記事では直線や半直線との違いの部分にフォーカスして解説していきます。
</p>

<p>
  その為、この記事を読む前に、以下の記事を先に理解しておく事をお勧めします。
</p>
<ul>
  <li><a href="../point-and-line-nearest/">点と直線の最近傍点</a></li>
  <li><a href="../point-and-ray-nearest/">点と半直線の最近傍点</a></li>
</ul>

<h2>直線や半直線との違い</h2>

<p>直線は無限に続く線、半直線は始点があり、一方に無限に伸びる線ですが、線分には始点と終点があり長さがあります。</p>

<p>点と線分の最近傍点を求める際には、始点と終点の存在を考える必要があります。</p>

<h2>考え方</h2>

<div id="graph2"></div>

<p>
  <span class="green">●</span>を動かして確かめてもらいたいのですが、<span class="green">●</span>が青い領域にあるとき<br>
  最近傍点の求め方は
  <a href="../point-and-line-nearest/">点と直線の最近傍点</a>の求め方と同じになります。
</p>

<p>
  しかし、<span class="green">●</span>が赤い領域にある時は、線分の左端が最近傍点になり、黄色の領域にある場合は線分の右端が最近傍点となります。
</p>

<p>
  つまり、点と線分の最近傍点を求めるには
</p>

<p>
  <span class="green">●</span>があるのは青の領域なのか、それとも赤なのか、はたまた黄色なのかを判定する必要があります。
</p>

<p>それを判定するために<a href="../../vector2/dot/">ベクトルの内積</a>を使います。</p>

<p>
  内積についてより詳しい説明は<a href="../../vector2/dot2/">ベクトルの内積の特性</a>に記載していますので興味があれば読んでみて下さい。
</p>

<h2>赤？青？黄色？</h2>

<div id="graph3"></div>

<p class="math">
  $A$: 点<br>
  $P1$: 線分の始点<br>
  $P2$: 線分の終点<br>
</p>

<h3>赤なのか？</h3>

<p>まずは $点A$ が赤の領域にあるかどうかを判定します。</p>

<div id="graph4"></div>

<p class="math">
  $\vec{v}$：線分の方向を表すベクトル<br>
  $\vec{a}$：線分の始点 $P1$ から $点A$ に向かうベクトル
</p>

<p>
  $\vec{v}$ と $\vec{a} $ の内積の結果がマイナスであれば、$点A$ は赤い領域にある事になり、この時の点と線分の最近傍点は $点P1$ になります。
</p>

<p class="math">
  $ \vec{v} \cdot \vec{a} &lt; 0 $ の時、最近傍点は $点P1$
</p>


<h3>黄色なのか？</h3>

<p>次に $点A$ が黄色の領域にあるかどうかを判定します。</p>

<div id="graph5"></div>

<p class="math">
  $\vec{v}$：線分の方向を表すベクトル<br>
  $\vec{a}$：線分の終点 $P2$ から $点A$ に向かうベクトル
</p>

<p>
  $\vec{v}$ と $\vec{a} $ の内積の結果がプラスであれば、$点A$ は黄色の領域にある事になり、この時の点と線分の最近傍点は $点P2$ になります。
</p>

<p class="math">
  $ \vec{v} \cdot \vec{a} &gt; 0 $ の時、最近傍点は $点P2$
</p>

<h3>赤でも黄色でもなければ青である</h3>

<div id="graph6"></div>

<p>見た通りですが、 $点A$ が赤、黄色の領域になければ、青の領域にあることになります。</p>

<p>
  この場合、点と線分の最近傍点は<a href="../point-and-line-nearest/">点と直線の最近傍点</a>と同じ方法で求まります。
</p>

<h2>サンプルコード</h2>

<pre><code>/**
  * 点と線分の最近傍点を取得する
  * @param p 点
  * @param seg 線分
  */
 export function getNearest(p:Vector2, seg:Segment) {

   // 線分の向きを表すベクトルをv
   const v = seg.v;

   // 線分の始点から点に向かうベクトルをa1
   const a1 = Vector2.sub(p, seg.p1);
 
   // v と a1 の 内積がマイナス = 点は線分の始点の外側にある = 線分の始点が最近傍点
   if (Vector2.dot(v, a1) < 0) {
     return seg.p1;
   }

   // 線分の終点から点に向かうベクトルをa2
   const a2 = Vector2.sub(p, seg.p2);

   // v と a2 の 内積がプラス = 点は線分の終点の外側にある = 線分の終点が最近傍点
   if (Vector2.dot(v, a2) > 0) {
    return seg.p2;
  }

   // 線分との最近傍点を求める
   const n = v.normalize;
   const dot = Vector2.dot(n, a1);
   return Vector2.add(seg.p1, n.times(dot));
 }</code></pre>